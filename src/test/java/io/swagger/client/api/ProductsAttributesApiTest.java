/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Attribute;
import io.swagger.client.model.NotFoundResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductsAttributesApi
 */
@Ignore
public class ProductsAttributesApiTest {

    private final ProductsAttributesApi api = new ProductsAttributesApi();

    
    /**
     * 
     *
     * Creates a new attribute of products in the store.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addProductsAttributesTest() throws ApiException {
        Attribute attribute = null;
        List<Attribute> response = api.addProductsAttributes(attribute);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * deletes a single attribute of products based on the ID supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProductAttributeByIdTest() throws ApiException {
        Long id = null;
        api.deleteProductAttributeById(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a attribute of products based on a single ID  ### Includes You can give the following values on includes parameter: &#x60;options&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductAttributeByIdTest() throws ApiException {
        Long id = null;
        List<String> includes = null;
        Attribute response = api.getProductAttributeById(id, includes);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns all attributes of products from the system that the user has access to  ### Includes You can give the following values on includes parameter: &#x60;options&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductsAttributesTest() throws ApiException {
        List<String> includes = null;
        Integer limit = null;
        List<String> orderBy = null;
        List<Attribute> response = api.getProductsAttributes(includes, limit, orderBy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * update a single attribute of products based on the ID supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProductAttributeByIdTest() throws ApiException {
        Long id = null;
        Attribute productAttribute = null;
        Attribute response = api.updateProductAttributeById(id, productAttribute);

        // TODO: test validations
    }
    
}
