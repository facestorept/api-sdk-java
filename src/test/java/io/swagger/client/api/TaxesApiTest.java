/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.InlineResponse2002;
import io.swagger.client.model.InlineResponse2012;
import io.swagger.client.model.Tax;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaxesApi
 */
@Ignore
public class TaxesApiTest {

    private final TaxesApi api = new TaxesApi();

    
    /**
     * 
     *
     * Creates a new tax in the store.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addTaxesTest() throws ApiException {
        Tax tax = null;
        InlineResponse2012 response = api.addTaxes(tax);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * deletes a single tax based on the ID supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTaxByIdTest() throws ApiException {
        Long id = null;
        api.deleteTaxById(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a tax based on a single ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTaxByIdTest() throws ApiException {
        Long id = null;
        Integer limit = null;
        InlineResponse2012 response = api.getTaxById(id, limit);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns all taxes from the system that the user has access to
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTaxesTest() throws ApiException {
        List<String> includes = null;
        Integer limit = null;
        List<String> orderBy = null;
        InlineResponse2002 response = api.getTaxes(includes, limit, orderBy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * update a single tax based on the ID supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTaxByIdTest() throws ApiException {
        Long id = null;
        Tax tax = null;
        InlineResponse2012 response = api.updateTaxById(id, tax);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * update a single tax based on the ID supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTaxById_0Test() throws ApiException {
        Long id = null;
        Tax tax = null;
        InlineResponse2012 response = api.updateTaxById_0(id, tax);

        // TODO: test validations
    }
    
}
