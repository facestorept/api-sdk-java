/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Category;
import io.swagger.client.model.InlineResponse2001;
import io.swagger.client.model.InlineResponse2011;
import io.swagger.client.model.NotFoundResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CategoriesApi
 */
@Ignore
public class CategoriesApiTest {

    private final CategoriesApi api = new CategoriesApi();

    
    /**
     * 
     *
     * Creates a new category in the store.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCategoriesTest() throws ApiException {
        Category category = null;
        InlineResponse2011 response = api.addCategories(category);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * deletes a single category based on the ID supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCategoryByIdTest() throws ApiException {
        Long id = null;
        api.deleteCategoryById(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns all categories from the system that the user has access to  ### Includes You can give the following values on includes parameter: &#x60;routes, products&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCategoriesTest() throws ApiException {
        List<String> includes = null;
        Integer limit = null;
        List<String> orderBy = null;
        InlineResponse2001 response = api.getCategories(includes, limit, orderBy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a category based on a single ID  ### Includes You can give the following values on includes parameter: &#x60;routes, products&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCategoryByIdTest() throws ApiException {
        Long id = null;
        List<String> includes = null;
        Integer limit = null;
        InlineResponse2011 response = api.getCategoryById(id, includes, limit);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * update a single category based on the ID supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCategoryByIdTest() throws ApiException {
        Long id = null;
        Object category = null;
        api.updateCategoryById(id, category);

        // TODO: test validations
    }
    
}
